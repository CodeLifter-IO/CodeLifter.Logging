# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#Modeling this yaml after the walkthrough at https://medium.com/@dan.cokely/creating-nuget-packages-in-azure-devops-with-azure-pipelines-and-yaml-d6fa30f0f15e

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: 'CodeLifter.Logging/CodeLifter.Logging.csproj'

- task: DotNetCoreCLI@2
  displayName: "dotnet pack"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: 'CodeLifter.Logging/CodeLifter.Logging.csproj'
    nobuild: true
    versioningScheme: 'off'

# - task: NuGetCommand@2
#   displayName: 'nuget push'
#   inputs:
#     command: 'push'
#     feedsToUse: 'select'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
#     nuGetFeedType: 'internal'
#     publishVstsFeed: 'TestFeed'
#     versioningScheme: 'off'
#     allowPackageConflicts: true
